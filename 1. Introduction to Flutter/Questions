What is Flutter?

	Флаттер - sdk и фреймфорк с открытым исходным кодом для создания кроссплатформенных приложений с использованием языка Dart. Flutter и Dart разработаны корпорацией Google, развиваются ей же при поддержке сообщества.

	Фреймворк - это набор библиотек и инструментов. Он определяет базовую структуру приложения, обеспечивает механизмы для взаимодействия с внешними библиотеками и компонентами.

	SDK (Software Development Kit) - это набор инструментов и библиотек, который используется для создания приложений для определенной платформы или устройства.

	SDK обычно состоит из компиляторов, библиотек, документации.

What is internal structure of Flutter? What layers does it consists of?

	Флаттер имеет многоуровневую структуру, которая состоит из трёх слоёв. 

	Framework (Фреймворк): Он представляет из себя набор виджетов, инструментов и классов, которые используются для создания пользовательских интерфейсов. Включает в себя стили виджетов Material и Cupertino, базовые виджеты(текст, кнопки и тд), базовые классы Foundations и библиотеки animation, painting, gestures (для обработки событий), rendering (для работы с деревом виджетов).
       Engine (Движок): Низкоуровневый слой, который обеспечивает отрисовку пользовательского интерфейса, обработку ввода и работу с системой. Движок состоит из множества компонентов, двое, которые отвечают за отрисовку интерфейса: Dart VM и Skia (или Impeller). 
       1. Dart VM – виртуальная машина, которая исполняет Dart код. Dart VM обновляет интерфейс и вызывает Skia для его перерисовки. 
       2. Skia – движок рендеринга 2D-графики (однако сейчас создаётся на замену Impeller), разработанный компанией Гугл. Он написан на С++.
          Процесс перерисовки: Dart код (виджеты и логика) → Dart VM (исполняет Дарт код) → UI Commands (их генерирует Dart VM и передаёт в Skia/Impeller) → Skia (на основе команд, сгенерированных Dart VM, перерисовывает интерфейс) → Рендеринг интерфейса
          Также в движке присутствуют такие компоненты, как Frame Scheduler, Gesture System (система распознавания жестов) и Widget Library.
       Embedder (Встраиватель): Этот слой предоставляет платформозависимый код, который встраивает движок Флаттера в операционную систему хоста. Эмбеддер отвечает за создание окон, обработку событий ввода, доступ к файловой системе, сетевому стеку и другим ресурсам, а также управление жизненным циклом приложения. Встраиватели доступны для различных платформ, таких как Android, iOS, Windows, macOS и Linux.

What are the differences between Flutter and other crossplatform frameworks?

	1. Собственный движок рендеринга (реакт нейтив использует платформенные движки, котлин кроссплатформ - тоже)
	2. Собственные абстрактные виджеты, которые рисуются независимо от платформы, в то время как реакт нейтив и котлин используют нативные UI элементы.





Why is flutter called a reactive framework?

	Реактивный подход означает, что приложение реагирует на изменение данных и обновление их в пользовательском интерфейсе автоматически, без явного управления этим процессом.
	Флаттер является реактивным фреймворком, потому что использует стейты для обеспечения связи между данными и элементами пользовательского интерфейса и при изменении данных виртуальная машина Дарта сама посылает сигналы на перерисовку, программисту не приходится вручную перерисовывать их в коде. 

What operating systems does Flutter support?

	Андроид, айос, Виндовс, Линукс, Макос + веб. Такая широкая поддержка обеспечивается благодаря наличию собственных движков отрисовки и набора абстрактных виджетов, которые ведут себя одинаково на разных платформах. 

Explain the concept of a widget?
	
	Виджет – это некая часть интерфейса с определённым видом и поведением. Во флаттере есть 2 основных типа виджетов – Stateful и Stateless, Stateful обновляются при изменении состояния, Stateless просто отрисовываются один раз, не могут обновляться. Идея виджетов заключается в том, чтобы разделить интерфейс и логику, сделав интерфейс автоматически обновляемым. Для перерисовки/обновления виджета вызывается метод build, однако ему предшествует вызов setState.

What is Cupertino and Material?

	Mаterial и Cupertino – это два стандартных дизайна интерфейса, которые предоставляет Флаттер. Эти два дизайна представлены в виде наборов виджетов.

	Material - это дизайн Material Design, разработанный Google. Он ориентирован на Android-устройства.
	Cupertino - это дизайн iOS, ориентированный на устройства Apple.

Can I use Material Design on iOS?

	Да, можно использовать Материал дизайн на ИОС, тк это просто набор виджетов, а флаттер рисует платформонезависимые виджеты. Поэтому на ИОС можно использовать виджеты в стиле андроид, а на Андроиде – в стиле иос.


How can you implement custom widgets?
	
	Для этого нужно создать класс, который наследует класс StateFul или Stateless и реализовать метод build, который будет отрисовывать виджет. Всё, кастомный виджет готов к использованию.

What is pub.dev?
	
	Паб дев – это пакетный менеджер во Флаттере, который позволяет управлять пакетами, зависимостями между ними, их версиями и тд. Для работы с пакетным менеджером используется ключевое слово pub и следующая за ним команда. Основные команды: pub get (загрузить используемые пакеты), pub upgrade (обновить пакеты), pub deps (показывает дерево зависимостей пакета), pub downgrade _имя (удаление пакета).

What is the pubspec.yaml file?

	 pubspec.yaml – это файл, который описывает пакет. Он содержит следующую информацию: имя, описание, версию, список зависимостей, требуемую версию флаттер сдк и так далее. С помощью команды pub pubspec.yaml можно проверить пакет в текущей директории, где мы запустили эту команду. 
	Также имеется файл pubspec.lock - это файл, создаваемый инструментом управления зависимостями Pub при выполнении команды pub get или pub upgrade, и он содержит информацию о версиях зависимостей, установленных для вашего проекта.

How do you integrate third-party libraries or packages into a Flutter application?

	1. Необходимо добавить библиотеку в список зависимостей в pubspec.yaml
	2. Выполнить pub get для её загрузки, после чего она добавится в pubspec.lock 
	3. Заимпортировать её с помощью команды import 'package:package_name/package_name.dart'; 


