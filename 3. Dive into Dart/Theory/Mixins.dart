/*
        Mixins - разновидность классов, которые используются для расширения 
    функциональности других классов. Используются с помощью ключевого слова 
    "with". Можно использовать более одного Миксина в одном классе. Миксины не 
    могут ничего наследовать и не могут быть наследованы, однако могут реализовывать интерфейсы/абстрактные классы.
    Также можно ограничить классы, которые могут использовать Миксины 
    ключевым словом "on", но в таком случае класс-ограничитель использовать Миксин не сможет, а смогут только те классы, 
    которые наследуютреализуют ограничения Миксина. 
        Можно создавать mixin-classes, которые можно использовать и как 
    миксины, и как классы. Так же можно создавать abstract mixin classes, 
    которые можно использовать и как интерфейсы, и как классы, и как миксины.
    !Однако никакие Миксины не могут иметь именованных конструкторов!
*/

class Bird
{
    int fly()
    {
        return speed;
    }
}

class Pigeon extends Bird with Flying
{
    int getFlyingSpeed()
    {
        return speed;
    }
}

class Fish implements Bebra
{
  @override
  int getNum() {
    // TODO: implement getNum
    throw UnimplementedError();
  }
}

abstract mixin class Bebra
{
    Bebra()
    {

    }
    int getNum();
}

abstract class Obj
{

}

mixin Flying on Bird implements Obj
{
    int speed = 10;
}
